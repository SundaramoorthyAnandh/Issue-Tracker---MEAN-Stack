{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/issues.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,4I;;;;;;;;;;;;;;;;;;;;;ACA0C;AAU1C;IARA;QASE,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QARxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAMrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACqB;AACtC;AAEoB;AAEd;AACkB;AACM;AACN;AAEpB;AAE7C,wCAAwC;AACc;AAEtD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC9C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,6EAAa,EAAE;CACzC,CAAC;AAEF,4BAA4B;AAC4B;AACT;AAE/C,yBAAyB;AACe;AACE;AACQ;AAuBlD;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAa;gBACb,mFAAe;gBACf,6EAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,0EAAgB;gBAChB,sEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,wDAAU;gBACV,0DAAW;gBACX,kEAAe;gBACf,0DAAW;aACZ;YACD,SAAS,EAAE,CAAC,8DAAa,CAAC;YAC1B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtDtB,+DAA+D,2J;;;;;;;;;;;ACA/D,4qCAA4qC,UAAU,osE;;;;;;;;;;;;;;;;;;;;;;;;;;ACApoC;AACG;AACZ;AAOzC;IAaE,yBAAoB,KAAoB,EAAU,MAAc;QAA5C,UAAK,GAAL,KAAK,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAThE,OAAE,GAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,WAAM,GAAO,MAAM,CAAC;QACpB,aAAQ,GAAO,KAAK,CAAC;QACrB,gBAAW,GAAO,SAAS,CAAC;QAC5B,gBAAW,GAAO,OAAO,CAAC;QAE1B,kBAAa,GAAQ,QAAQ,CAAC;QAC9B,kBAAa,GAAQ,QAAQ,CAAC;IAEsC,CAAC;IAErE,kCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACzC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAC,GAAG,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAe,GAAf,UAAgB,KAAS;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACxC,CAAC;IAED,yCAAe,GAAf,UAAgB,KAAS;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACxC,CAAC;IAED,sCAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACrC,CAAC;IAED,qCAAW,GAAX,UAAY,KAAU;QAAtB,iBAuBC;QAtBC,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAC,IAAI,CAAC,QAAQ,GAAC,SAAS,GAAC,IAAI,CAAC,WAAW,GAAC,SAAS,GAAC,IAAI,CAAC,WAAW,GAAC,WAAW,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnI,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACxF,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAC/B,KAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC3B,UAAU,CAAC;gBACT,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAC9B,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAC9B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACjC,CAAC,EAAE,IAAI,CAAC,CAAC;QAEf,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YACjC,KAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC3B,UAAU,CAAC;gBACT,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAC9B,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAC9B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,CAAC,EAAE,IAAI,CAAC,CAAC;QACf,CAAC,CACA,CAAC;IAC5B,CAAC;IA3DU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAc2B,6DAAa,EAAkB,sDAAM;OAbrD,eAAe,CA6D3B;IAAD,sBAAC;CAAA;AA7D2B;;;;;;;;;;;;ACT5B,+DAA+D,uJ;;;;;;;;;;;ACA/D,yiB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACG;AAOrD;IAEE,uBAAoB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;IAAI,CAAC;IAE7C,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG2B,6DAAa;OAF7B,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACR1B,+DAA+D,uJ;;;;;;;;;;;ACA/D,kYAAkY,aAAa,yBAAyB,cAAc,yBAAyB,gBAAgB,yBAAyB,mBAAmB,yBAAyB,mBAAmB,+rCAA+rC,4BAA4B,aAAa,mBAAmB,cAAc,mBAAmB,gBAAgB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,WAAW,6C;;;;;;;;;;;;;;;;;;;;;;;;;ACA35D;AACG;AAUrD;IAKE,uBAAoB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;QAHxC,cAAS,GAAY,EAAE,CAAC;IAGoB,CAAC;IAE7C,8BAA8B;IAC9B,0EAA0E;IAC1E,IAAI;IAEJ,gCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE;aACjB,IAAI,CAAC,cAAI;YAAM,KAAI,CAAC,SAAS,GAAa,IAAI,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,OAAO,KAAI,CAAC,SAAS;QAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAhBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAM2B,6DAAa;OAL7B,aAAa,CAmBzB;IAAD,oBAAC;CAAA;AAnByB;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiB;AACM;AAMjD;IAGE,uBAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrC,QAAG,GAAG,uBAAuB,CAAC;IAEW,CAAC;IAE1C,iCAAS,GAAT;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,YAAS,CAAC,CAAC;IAC7C,CAAC;IAED,oCAAY,GAAZ,UAAa,EAAE;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACnD,CAAC;IAED,mCAAW,GAAX;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAa,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,gCAAQ,GAAR,UAAS,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ;QAEhD,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAC,KAAK,GAAC,SAAS,GAAC,WAAW,GAAC,SAAS,GAAC,WAAW,GAAC,WAAW,GAAC,QAAQ,CAAC,CAAC;QAExG,IAAM,QAAQ,GAAG;YACf,OAAO,EAAE,KAAK;YACd,aAAa,EAAE,WAAW;YAC1B,aAAa,EAAE,WAAW;YAC1B,UAAU,EAAE,QAAQ;SACrB,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAC,QAAQ,CAAC,KAAK,GAAC,SAAS,GAAC,QAAQ,CAAC,WAAW,GAAC,SAAS,GAAC,QAAQ,CAAC,WAAW,GAAC,WAAW,GAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAEjJ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,gBAAa,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAED,mCAAW,GAAX,UAAY,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM;QAC/D,IAAM,YAAY,GAAG;YACnB,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAED,mCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,CAAC,CAAC;IAC1D,CAAC;IAjDU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI2B,+DAAU;OAH1B,aAAa,CAkDzB;IAAD,oBAAC;CAAA;AAlDyB;;;;;;;;;;;;;ACP1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css',\n    // '../../node_modules/primeicons/primeicons.css',\n    // '../../node_modules/primeng/resources/primeng.min.css'\n  ]\n})\nexport class AppComponent {\n  title = 'Frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\n\nimport { FormsModule } from '@angular/forms';\n\n// adding Routes Array with imports here\nimport { RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'create', component: CreateComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'list', component: ListComponent },\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\n  { path: '**', component: ListComponent }\n];\n\n// adding HTTP Client Module\nimport { HttpClientModule } from '@angular/common/http';\nimport {IssuesService} from './issues.service';\n\n// adding PrimeNG Modules\nimport {CardModule} from 'primeng/card';\nimport {TableModule} from 'primeng/table';\nimport {InputTextModule} from 'primeng/inputtext';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    CreateComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    CardModule,\n    TableModule,\n    InputTextModule,\n    FormsModule\n  ],\n  providers: [IssuesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n      <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/list\\\">Incident Tracker</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a routerLink=\\\"/list\\\">Home</a></li>\\n      <li class=\\\"active\\\"><a routerLink=\\\"/create\\\">Create Incident</a></li>\\n      <li><a routerLink=\\\"/edit\\\">Update Incident</a></li>\\n    </ul>\\n      </div>\\n</nav>\\n\\n<p id=\\\"banner-text\\\"><span><strong>Create New Incident</strong></span></p>\\n\\n<div class=\\\"well\\\">\\n\\n  <form class=\\\"form-horizontal\\\" >\\n\\n\\n  <div [style.visibility]=\\\"showSBsuccess\\\"  id=\\\"snackbar-success\\\" role=\\\"alert\\\">\\n    <strong>Success!</strong> Issue Added Successfully.. Redirecting to Home\\n  </div> \\n  <div [style.visibility]=\\\"showSBfailure\\\"  id=\\\"snackbar-failure\\\" role=\\\"alert\\\">\\n    <strong>Failure!</strong> Error Adding a New Issue.. Please raise again\\n  </div>\\n\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label col-sm-2\\\" for=\\\"imNum\\\">IM Number:</label>\\n    <div class=\\\"col-sm-8\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imNum\\\" value=\\\"{{latestIM}}\\\"  placeholder=\\\"IM Number\\\" disabled>\\n    </div>\\n  </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" >Status:</label>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"radio\\\">\\n          <label><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Open\\\" checked>Open</label>\\n        </div>\\n        <div class=\\\"radio\\\">\\n          <label><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Pending\\\"disabled>Pending</label>\\n        </div>\\n        <div class=\\\"radio\\\">\\n          <label><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Closed\\\" disabled>Closed</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label col-sm-2\\\" >Severity:</label>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"radio\\\">\\n        <label><input type=\\\"radio\\\" name=\\\"optradio1\\\" (click)=\\\"severityFunc($event)\\\" value=\\\"Low\\\" checked>Low</label>\\n      </div>\\n      <div class=\\\"radio\\\">\\n        <label><input type=\\\"radio\\\" name=\\\"optradio1\\\" (click)=\\\"severityFunc($event)\\\" value=\\\"Medium\\\" >Medium</label>\\n      </div>\\n      <div class=\\\"radio\\\">\\n        <label><input type=\\\"radio\\\" name=\\\"optradio1\\\" (click)=\\\"severityFunc($event)\\\" value=\\\"High\\\" >High</label>\\n      </div>\\n    </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label col-sm-2\\\" for=\\\"responsible\\\">Responsible:</label>\\n    <div class=\\\"col-sm-8\\\">\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"responsible\\\" (change)=\\\"responsibleFunc($event)\\\" required placeholder=\\\"Add your Email\\\" />\\n    </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label col-sm-2\\\" for=\\\"description\\\">Description:</label>\\n    <div class=\\\"col-sm-8\\\">\\n      <textarea class=\\\"form-control\\\" rows=\\\"5\\\" minlength=\\\"20\\\" maxlength=\\\"200\\\" id=\\\"description\\\" (change)=\\\"descriptionFunc($event)\\\" placeholder=\\\"Add the description of your issue\\\"></textarea>\\n    </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-offset-2 col-sm-8\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitIssue($event)\\\"> Raise IM </button>\\n    </div>\\n    </div>\\n\\n  </form>\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IssuesService } from '../../issues.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  latestIM: String;\n\n  im:any = this.latestIM; \n  status:any = \"Open\";\n  severity:any = \"Low\";\n  responsible:any = \"nothing\";\n  description:any = \"empty\";\n  \n  showSBsuccess: any = \"hidden\";\n  showSBfailure: any = \"hidden\";\n\n  constructor(private iServ: IssuesService, private router: Router) { }\n\n  ngOnInit() {\n    this.iServ.getLatestIM().subscribe(latestIM => {\n      this.latestIM = latestIM[\"im\"];\n    },\n    err => {\n      console.log(\"ERROR WHILE GETTING LATEST IM VAL FROM DB\\n\",err)\n    });\n  }\n\n  responsibleFunc(event:any) {\n    this.responsible = event.target.value;\n  }\n\n  descriptionFunc(event:any) {\n    this.description = event.target.value;\n  }\n\n  severityFunc(event: any) {\n    this.severity = event.target.value;\n  }\n\n  submitIssue(event: any) {\n    console.log(\"OnSubmitIssue\\ntitle:\"+this.latestIM+\"\\nResp:\"+this.responsible+\"\\nDesc:\"+this.description+\"\\nSevere:\"+this.severity);\n    let formSubmit = this.iServ.addIssue(this.latestIM, this.responsible, this.description, this.severity).subscribe(\n                            resp => {\n                              console.log(\"Updated: \", resp);\n                              this.showSBsuccess = \"visible\";\n                                  setTimeout(() => {\n                                    this.showSBsuccess = \"hidden\";\n                                    this.showSBfailure = \"hidden\";\n                                    this.router.navigate(['list']);\n                                  }, 5000);\n                              \n                            },\n                            err => {\n                              console.log(\"Err Updating\", err);\n                              this.showSBfailure = \"visible\";\n                                  setTimeout(() => {\n                                    this.showSBsuccess = \"hidden\";\n                                    this.showSBfailure = \"hidden\";\n                                    this.router.navigate(['create']);\n                                  }, 5000);\n                            }\n                            );\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/list\\\">Incident Tracker</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a routerLink=\\\"/list\\\">Home</a></li>\\n      <li><a routerLink=\\\"/create\\\">Create Incident</a></li>\\n      <li class=\\\"active\\\"><a routerLink=\\\"/edit\\\">Update Incident</a></li>\\n    </ul>\\n  </div>\\n</nav>\\n<p id=\\\"banner-text\\\"><span><strong>Update Incident</strong></span></p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IssuesService } from '../../issues.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private iServ: IssuesService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n<p-table [value]=\\\"allIssues\\\">\\n    <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n            <th>IM Title</th>\\n            <th>Status</th>\\n            <th>Severity</th>\\n            <th>Responsible</th>\\n            <th>Description</th>\\n        </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-issue>\\n        <tr>\\n            <td>{{issue.title}}</td>\\n            <td>{{issue.status}}</td>\\n            <td>{{issue.severity}}</td>\\n            <td>{{issue.responsible}}</td>\\n            <td>{{issue.description}}</td>\\n        </tr>\\n    </ng-template>\\n</p-table>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- <nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/list\\\">Incident Tracker</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li class=\\\"active\\\">\\n        <a routerLink=\\\"/list\\\">\\n        <i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i>Home\\n        </a>\\n      </li>\\n      <li><a routerLink=\\\"/create\\\">Create Incident</a></li>\\n      <li><a routerLink=\\\"/edit\\\">Update Incident</a></li>\\n    </ul>\\n  </div>\\n</nav>\\n<p id=\\\"banner-text\\\"><span><strong>List All Incidents</strong></span></p>\\n<table class=\\\"table table-hover\\\" id=\\\"issuedata\\\" data-unique-id=\\\"Keyword\\\" data-sort-name=\\\"SearchVolume\\\" data-sort-order=\\\"desc\\\">\\n  <thead>\\n  <tr>\\n    <th data-sortable=\\\"true\\\">IM Number</th>\\n    <th data-sortable=\\\"true\\\">Status</th>\\n    <th data-sortable=\\\"true\\\">Severity</th>\\n    <th data-sortable=\\\"true\\\">Responsible</th>\\n    <th data-sortable=\\\"true\\\">Description</th>\\n    <th data-sortable=\\\"true\\\">ID</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let issue of allIssues; index as i\\\">\\n      <td>{{issue.title}}</td>\\n      <td>{{issue.status}}</td>\\n      <td>{{issue.severity}}</td>\\n      <td>{{issue.responsible}}</td>\\n      <td>{{issue.description}}</td>\\n      <td>{{issue._id}}</td>\\n  </tr>\\n  </tbody>\\n</table> -->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IssuesService } from '../../issues.service';\n\nimport { Issue } from '../../issue.interface'\nimport {TableModule} from 'primeng/table';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  allIssues: Issue[] = [];\n  SortByIMtitle: any;\n\n  constructor(private iServ: IssuesService) { }\n\n  // SortByIMtitle = (x, y) => {\n  //   return ((x.title === y.title) ? 0 : ((x.title > y.title) ? 1 : -1 ));\n  // }\n\n  ngOnInit() {\n    this.iServ.getIssues().toPromise()\n                    .then(data => { this.allIssues = <Issue[]> data; \n                      console.log(this.allIssues);\n                      return this.allIssues });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssuesService {\n  uri = 'http://localhost:4000';\n\n  constructor( private http: HttpClient) { }\n\n  getIssues() {\n    return this.http.get(`${this.uri}/issues`);\n  }\n\n  getIssueById(id) {\n    return this.http.get(`${this.uri}/issues/${id}`);\n  }\n\n  getLatestIM() {\n    const val = this.http.get(`${this.uri}/fetchIMval`);\n    console.log(val);\n    return val;\n  }\n\n  addIssue(title, responsible, description, severity) {\n\n    console.log(\"OnService\\ntitle:\"+title+\"\\nResp:\"+responsible+\"\\nDesc:\"+description+\"\\nSevere:\"+severity);\n\n    const newIssue = {\n      \"title\": title,\n      \"responsible\": responsible,\n      \"description\": description,\n      \"severity\": severity\n    };\n\n    console.log(\"OnServiceStep2\\ntitle:\"+newIssue.title+\"\\nResp:\"+newIssue.responsible+\"\\nDesc:\"+newIssue.description+\"\\nSevere:\"+newIssue.severity);\n\n    return this.http.post(`${this.uri}/issues/add`, newIssue);\n  }\n\n  updateIssue(id, title, responsible, description, severity, status) {\n    const updatedIssue = {\n      title: title,\n      responsible: responsible,\n      description: description,\n      severity: severity,\n      status: status\n    };\n\n    return this.http.post(`${this.uri}/issues/update/${id}`, updatedIssue);\n  }\n\n  deleteIssue(id) {\n    return this.http.get(`${this.uri}/issues/delete/${id}`);\n  }\n}\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}